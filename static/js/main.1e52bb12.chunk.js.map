{"version":3,"sources":["reportWebVitals.js","components/SearchBox.js","components/CardList.js","components/ScrollContainer.js","components/ErrorBoundary.js","containers/App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","SearchBox","onSearchTermChange","className","onChange","type","placeholder","CardList","listToRender","Error","ScrollContainer","props","style","overflowY","height","children","ErrorBoundary","state","hasError","error","info","this","setState","React","Component","App","useState","robotList","setRobotList","searchTerm","setSearchTerm","filteredRobots","filter","robotObject","name","toLowerCase","includes","useEffect","fetch","response","json","users","event","target","value","length","ReactDOM","render","document","getElementById"],"mappings":"kLAYeA,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,Q,eCQCQ,EAbG,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,mBACnB,OACE,qBAAKC,UAAU,MAAf,SACE,uBACEC,SAAUF,EACVC,UAAU,mCACVE,KAAK,SACLC,YAAY,kBCMLC,EAXE,SAAC,GAAqB,EAAnBC,aAEhB,MAAM,IAAIC,MAAM,UCILC,EARS,SAACC,GACvB,OACE,qBAAKC,MAAO,CAAEC,UAAW,SAAUC,OAAQ,SAA3C,SACGH,EAAMI,Y,4BCkBEC,E,kDApBb,WAAYL,GAAQ,IAAD,8BACjB,cAAMA,IACDM,MAAQ,CACXC,UAAU,GAHK,E,8DAODC,EAAOC,GACvBC,KAAKC,SAAS,CAAEJ,UAAU,M,+BAI1B,OAAIG,KAAKJ,MAAMC,SACN,oEAEAG,KAAKV,MAAMI,a,GAhBIQ,IAAMC,WC6CnBC,EAxCH,WAAO,IAAD,EACkBC,mBAAS,IAD3B,mBACTC,EADS,KACEC,EADF,OAEoBF,mBAAS,IAF7B,mBAETG,EAFS,KAEGC,EAFH,KAQVC,EAAiBJ,EAAUK,QAAO,SAACC,GACvC,OAAOA,EAAYC,KAChBC,cACAC,SAASP,EAAWM,kBAazB,OAVAE,qBAAU,WACRC,MAAM,8CACH3C,MAAK,SAAC4C,GACL,OAAOA,EAASC,UAEjB7C,MAAK,SAAC8C,GACLb,EAAaa,QAEhB,IAGD,sBAAKtC,UAAU,KAAf,UACE,6CACA,cAAC,EAAD,CAAWD,mBAvBgB,SAACwC,GAC9BZ,EAAcY,EAAMC,OAAOC,WAuBvBjB,EAAUkB,QAAU,4CACrBlB,EAAUkB,QACT,cAAC,EAAD,UACE,cAAC,EAAD,UACE,cAAC,EAAD,CAAUrC,aAAcuB,YC/BpCe,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,SAKjDzD,M","file":"static/js/main.1e52bb12.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\n\nconst SearchBox = ({ onSearchTermChange }) => {\n  return (\n    <div className=\"pa2\">\n      <input\n        onChange={onSearchTermChange}\n        className=\"pa3 ba b--green bg-lightest-blue\"\n        type=\"search\"\n        placeholder=\"Will Smith\"\n      />\n    </div>\n  );\n};\n\nexport default SearchBox;\n","import React from \"react\";\n\nimport Card from \"./Card\";\n\nconst CardList = ({ listToRender }) => {\n  if (true) {\n    throw new Error(\"HALLA\");\n  }\n  return listToRender.map((obj, index) => {\n    return (\n      <Card key={index} id={index} name={obj.name} email={obj.email} />\n    );\n  });\n};\n\nexport default CardList;\n","import React from \"react\";\n\nconst ScrollContainer = (props) => {\n  return (\n    <div style={{ overflowY: \"scroll\", height: \"700px\" }}>\n      {props.children}\n    </div>\n  );\n};\n\nexport default ScrollContainer;\n","import React from \"react\";\n\nclass ErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      hasError: false,\n    };\n  }\n\n  componentDidCatch(error, info) {\n    this.setState({ hasError: true });\n  }\n\n  render() {\n    if (this.state.hasError) {\n      return <h1>OOPS IS ERROR NOW WHY HOW NOT GOOD</h1>;\n    } else {\n      return this.props.children;\n    }\n  }\n}\n\nexport default ErrorBoundary;\n","import React, { useState, useEffect } from \"react\";\n\nimport SearchBox from \"../components/SearchBox\";\nimport CardList from \"../components/CardList\";\nimport ScrollContainer from \"../components/ScrollContainer\";\nimport ErrorBoundary from \"../components/ErrorBoundary\";\n\nconst App = () => {\n  const [robotList, setRobotList] = useState([]);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n\n  const handleSearchTermChange = (event) => {\n    setSearchTerm(event.target.value);\n  };\n\n  const filteredRobots = robotList.filter((robotObject) => {\n    return robotObject.name\n      .toLowerCase()\n      .includes(searchTerm.toLowerCase());\n  });\n\n  useEffect(() => {\n    fetch(\"https://jsonplaceholder.typicode.com/users\")\n      .then((response) => {\n        return response.json();\n      })\n      .then((users) => {\n        setRobotList(users);\n      });\n  }, []);\n\n  return (\n    <div className=\"tc\">\n      <h1>ROBOFRIENDS</h1>\n      <SearchBox onSearchTermChange={handleSearchTermChange} />\n      {!robotList.length && <h2>Loading...</h2>}\n      {robotList.length && (\n        <ScrollContainer>\n          <ErrorBoundary>\n            <CardList listToRender={filteredRobots} />\n          </ErrorBoundary>\n        </ScrollContainer>\n      )}\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"tachyons\";\n\nimport App from \"./containers/App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}